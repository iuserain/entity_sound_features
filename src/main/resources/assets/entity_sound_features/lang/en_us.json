{
  "entity_sound_features.config.pre_check": "Pre check all entity sounds",
  "entity_sound_features.config.pre_check.tooltip": "If enabled ESF will cache all entity initial spawn conditions for all possible sounds when they first loaded.\nIf disabled ESF will cache the entities spawn conditions, per sound, only as the entities conditions are when that sound is first played.",
  "entity_sound_features.config.log_setup": "Log sound setup",
  "entity_sound_features.config.log_setup.tooltip": "Will log the setup info of all sound .properties.",
  "entity_sound_features.config.announce": "Announce sounds",
  "entity_sound_features.config.announce.tooltip": "Allows ESF compatible sounds to be announced to the log.\nHelps to discover possible sounds to modify.",
  "entity_sound_features.config.announce.esf": "With .properties",
  "entity_sound_features.config.announce.all": "All",
  "entity_sound_features.config.announce.all_once": "All once",
  "entity_sound_features.config.suffix_behaviour": "Suffix choice behaviour",
  "entity_sound_features.config.suffix_behaviour.tooltip": "Sets which method to use when choosing between multiple different suffixes supplied by the same property\nE.G. sounds.1=1 2 3\nRandom = randomly pick every time from the whole set\nConsistent = will pick the same suffix every time for the same entity (same as ETF textures)\nFirst = will always pick the first suffix\nSequential = will cycle through the suffixes in order each time the sound plays",
  "entity_sound_features.config.suffix_behaviour.random": "Random",
  "entity_sound_features.config.suffix_behaviour.consistent": "Consistent",
  "entity_sound_features.config.suffix_behaviour.first": "First",
  "entity_sound_features.config.suffix_behaviour.sequential": "Sequential All",
  "entity_sound_features.config.suffix_behaviour.sequential_entity": "Sequential per Entity",
  "entity_sound_features.config.playingsound.property": "playingSound\nESF only!\nMatches the given strings or regex/pattern against each of the currently playing sound events found in the sound engine.\nModded sound events should include the mods namespace but vanilla sound events will not include the minecraft: namespace.\nOptionally if this property text starts with 'print:' it will print all found sound event ids to the log every time it checks.\nNote not all sounds active in the sound engine are actually in range of the client player, so this may not always work as expected.",
  "entity_sound_features.config.playsound.method": "playsound(id, cond, x, y, z, a) or playsound(id, cond, x)\nWill trigger the given sound event to play.\nReturns true if the sound was triggered or false otherwise\ncan have either 3 or 6 arguments depending on your needs\nid= the sound event id e.g. entity.chicken.death\nModded sound events should include the mods namespace but vanilla sound events will not include the minecraft: namespace.\ncond= boolean condition that must be true to trigger the sound\nx= minimum delay between sound plays in game ticks, minimum of 1\ny= (optional) volume 0-1, default is 1.0\nz= (optional) pitch 0.5-2, default is 1.0\na= (optional) distance 0-128 the distance the sound can be heard from, default is 16",
  "entity_sound_features.config.playingsound.method": "playingsound(id)\nreturns true if the given sound event id is currently playing in the sound engine, false otherwise or if there is an error.\nid= the sound event id e.g. entity.chicken.death\nModded sound events should include the mods namespace but vanilla sound events will not include the minecraft: namespace.",
  "entity_sound_features.config.allow_entity": "Allow sound variation",
  "entity_sound_features.config.allow_entity.tooltip": "Sets whether or not ESF will allow sounds to be varied for this entity.\nIf disabled ESF will only play the default sounds for this entity type.",
  "entity_sound_features.config.entity_search.exact": "Exact",
  "entity_sound_features.config.entity_search.block": "1 Block",
  "entity_sound_features.config.entity_search.nearest": "Nearest",
  "entity_sound_features.config.entity_search.client": "Client player",
  "entity_sound_features.config.entity_search": "Sound source search mode",
  "entity_sound_features.suffix_property": "Sound Suffix (Optional)\nmatches the last random sound suffix number that the entities sound was set to\ndefaults to 0\nExample: soundSuffix.1= 2 4 6\n§asoundSuffix.<n>=<list>",
  "entity_sound_features.rule_property": "Sound Rule (Optional)\nmatches the last random sound rule number that the entities sound matched against\ndefaults to 0\nExample: soundRule.1= 2 4 6\n§asoundRule.<n>=<list>",
  "entity_sound_features.config.entity_search.tooltip": "ESF must search for the source entity near to where the sound is played.\nThis setting determines how ESF will search for the sound source entity.\nExact means the sound x,y,z must exactly match the entity\n1 Block means ESF will search a radius of 1 block from where the sound played.\nNearest will simply find the nearest entity, over any distance, this is really not recommended at all.\nClient player will always use the client player as the sound source.\nBlock entities will only check the exact block the sound is played from."
}